<?xml version="1.0"?>
<!DOCTYPE look-and-feel PUBLIC "-//Liferay//DTD Look and Feel 6.2.0//EN" "http://www.liferay.com/dtd/liferay-look-and-feel_6_2_0.dtd">

<look-and-feel>
	<compatibility>
		<version>6.2.0+</version>
	</compatibility>
	<theme id="manzanita" name="Manzanita Theme">
		<settings>
			<setting configurable="true" key="dockbar-vertical" type="checkbox" value="true" />
			<setting configurable="true" key="portlet-setup-show-borders-default" type="checkbox" value="false" />
			<setting configurable="true" key="custom-logo" type="checkbox" value="false" />
			<setting configurable="true" key="space-between-header" type="select" options="none,below,normal" value="none" />
			<setting configurable="true" key="footer-web-content-article-id" type="text" value="" />
			<setting configurable="true" key="main-container-fluid" type="checkbox" value="true" />
			<setting configurable="true" key="header-max-width" type="text" value="" />
			<setting configurable="true" key="footer-max-width" type="text" value="" />

			<setting configurable="true" type="text" key="navigation-color" value="">
				<![CDATA[
					AUI().ready(
						'aui-color-picker-popover',
						function(A) {
							var AllControls = A.all("#regularlayoutsAdminLookAndFeelSettingsPanelContent .control-group");
							AllControls.setStyle('marginBottom', '5px');

							var nodePicker = A.one("#[@NAMESPACE@]navigation-color");

							var nodePickerText = A.one("#[@NAMESPACE@]navigation-text-color");
							nodePicker.ancestor().setStyle('float', 'left');
							nodePicker.ancestor().setStyle('marginRight', '10px');

							nodePicker.setStyle('width', '74px');
							nodePicker.setStyle('borderLeftWidth', '30px');
							nodePicker.setStyle('borderLeftColor', nodePicker.get('value'));
							nodePickerText.setStyle('background', nodePicker.get('value'));

							var colorPicker = new A.ColorPickerPopover({
						        trigger: nodePicker,
						        zIndex: 99
							}).render();

							colorPicker.on('select', function(event) {
								var color = event.color;
								event.trigger.set('value', color);
								nodePicker.setStyle('borderLeftColor', color);
								nodePickerText.setStyle('background', color);
								A.all('table .checkerNode').removeClass('btn-success');
								A.one("#[@NAMESPACE@]palette-selector").set('value', '');
							});
						}
					);
				]]>
			</setting>
			<setting configurable="true" type="text" key="navigation-text-color" value="">
				<![CDATA[
					AUI().ready(
						'aui-color-picker-popover',
						function(A) {
							var nodePicker = A.one("#[@NAMESPACE@]navigation-text-color");
							nodePicker.setStyle('width', '74px');
							nodePicker.setStyle('borderLeftWidth', '30px');
							nodePicker.setStyle('borderLeftColor', nodePicker.get('value'));
							nodePicker.setStyle('color', nodePicker.get('value'));

							var colorPicker = new A.ColorPickerPopover({
						        trigger: nodePicker,
						        zIndex: 99
							}).render();

							colorPicker.on('select', function(event) {
								var color = event.color;
								event.trigger.set('value', color);
								nodePicker.setStyle('borderLeftColor', color);
								nodePicker.setStyle('color', color);
								A.all('table .checkerNode').removeClass('btn-success');
								A.one("#[@NAMESPACE@]palette-selector").set('value', '');
							});
						}
					);
				]]>
			</setting>
			<setting configurable="true" type="text" key="footer-color" value="">
				<![CDATA[
					AUI().ready(
						'aui-color-picker-popover',
						function(A) {
							var nodePicker = A.one("#[@NAMESPACE@]footer-color");

							var nodePickerText = A.one("#[@NAMESPACE@]footer-text-color");
							nodePicker.ancestor().setStyle('float', 'left');
							nodePicker.ancestor().setStyle('marginRight', '10px');

							nodePicker.setStyle('width', '74px');
							nodePicker.setStyle('borderLeftWidth', '30px');
							nodePicker.setStyle('borderLeftColor', nodePicker.get('value'));
							nodePickerText.setStyle('background', nodePicker.get('value'));

							var colorPicker = new A.ColorPickerPopover({
						        trigger: nodePicker,
						        zIndex: 99
							}).render();

							colorPicker.on('select', function(event) {
								var color = event.color;
								event.trigger.set('value', color);
								nodePicker.setStyle('borderLeftColor', color);
								nodePickerText.setStyle('background', color);
								A.all('table .checkerNode').removeClass('btn-success');
								A.one("#[@NAMESPACE@]palette-selector").set('value', '');
							});
						}
					);
				]]>
			</setting>
			<setting configurable="true" type="text" key="footer-text-color" value="">
				<![CDATA[
					AUI().ready(
						'aui-color-picker-popover',
						function(A) {
							var nodePicker = A.one("#[@NAMESPACE@]footer-text-color");
							nodePicker.setStyle('width', '74px');
							nodePicker.setStyle('borderLeftWidth', '30px');
							nodePicker.setStyle('borderLeftColor', nodePicker.get('value'));
							nodePicker.setStyle('color', nodePicker.get('value'));

							var colorPicker = new A.ColorPickerPopover({
						        trigger: nodePicker,
						        zIndex: 99
							}).render();

							colorPicker.on('select', function(event) {
								var color = event.color;
								event.trigger.set('value', color);
								nodePicker.setStyle('borderLeftColor', color);
								nodePicker.setStyle('color', color);
								A.all('table .checkerNode').removeClass('btn-success');
								A.one("#[@NAMESPACE@]palette-selector").set('value', '');
							});

							var pikers = A.all(".yui3-color-picker-popover");
							pikers.setStyle('width', '280px');
						}
					);
				]]>
			</setting>
			<setting configurable="true" type="text" key="palette-selector" value="">
				<![CDATA[
					AUI().ready(
						function(A) {
							var nodeObj = A.one('#[@NAMESPACE@]palette-selector').get('parentNode');

							nodeObj.prepend('
							<table class="table" style="color:#FFFFFF;font-size:80%;border:0">
								<tbody>
									<tr style="cursor:pointer;" class="palette" pallete="#512DA8/#EEEEEE/#673AB7/#FFFFFF/Dracula" id="Dracula">
										<td style="width:45px;">
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:#512DA8;color:#EEEEEE">Dracula</td>
										<td style="background:#673AB7;color:#FFFFFF">Dracula</td>
									</tr>
									<tr style="cursor:pointer;" class="palette" pallete="#0288D1/#F3F3F3/#03A9F4/#EEEEEE/Sea" id="Sea">
										<td>
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:#0288D1;color:#F3F3F3">Sea</td>
										<td style="background:#03A9F4;color:#EEEEEE">Sea</td>
									</tr>
									<tr style="cursor:pointer;" class="palette" pallete="#AFB42B/#000000/#CDDC39/#555555/Forest" id="Forest">
										<td>
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:#AFB42B;color:#000000">Forest</td>
										<td style="background:#CDDC39;color:#555555">Forest</td>
									</tr>
									<tr style="cursor:pointer;" class="palette" pallete="red/#EEEEEE/orange/#EEEEEE/Sun" id="Sun">
										<td>
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:red;color:#EEEEEE">Sun</td>
										<td style="background:orange;color:#EEEEEE">Sun</td>
									</tr>
									<tr style="cursor:pointer;" class="palette" pallete="#D32F2F/#EEEEEE/#F44336/#FFFFFF/Reding" id="Reding">
										<td>
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:#D32F2F;color:#EEEEEE">Reding</td>
										<td style="background:#F44336;color:#FFFFFF">Reding</td>
									</tr>
									<tr style="cursor:pointer;" class="palette" pallete="#5D4037/#EEEEEE/#795548/#FFFFFF/Terra" id="Terra">
										<td>
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:#5D4037;color:#EEEEEE">Terra</td>
										<td style="background:#795548;color:#FFFFFF">Terra</td>
									</tr>
									<tr style="cursor:pointer;" class="palette" pallete="#E1BEE7/#555555/#673AB7/#FFFFFF/DraculaBin" id="DraculaBin">
										<td>
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:#E1BEE7;color:#555555">DraculaBin</td>
										<td style="background:#673AB7;color:#FFFFFF">DraculaBin</td>
									</tr>
									<tr style="cursor:pointer;" class="palette" pallete="#B3E5FC/#727272/#03A9F4/#EEEEEE/BlueBin" id="BlueBin">
										<td>
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:#B3E5FC;color:#727272">BlueBin</td>
										<td style="background:#03A9F4;color:#EEEEEE">BlueBin</td>
									</tr>
									<tr style="height:50px; cursor:pointer;" class="palette" pallete="#F0F4C3/#333333/#CDDC39/#555555/Gold" id="Gold">
										<td>
											<div class="img-circle checkerNode" style="height:35px;width:35px;border: 3px solid #CCC"></div>
										</td>
										<td style="background:#F0F4C3;color:#333333">Gold</td>
										<td style="background:#CDDC39;color:#555555">Gold</td>
									</tr>
									<tr style="height: 50px;">
										<td colspan="3"><span class="btn btn-block palette" pallete="/////">Reset to default theme palette</span></td>
									</tr>
								</tbody>
							</table>');

							A.one('#[@NAMESPACE@]palette-selector').addClass('hide');
							nodeObj.one(".control-label").addClass('hide');

							var nodeInputID = A.one('#[@NAMESPACE@]palette-selector').val();

							if (nodeInputID) {
								var node = A.one('#'+nodeInputID+' .checkerNode');
								if (node) {
									node.setAttribute('class', 'checkerNode img-rounded btn-success');
								}
							}

							var Palettes = A.all('.palette');
							if (Palettes) {
								Palettes.each(
									function(node) {
										node.on(
											'click',
											function() {
												setPalette(node.attr('pallete'));
												A.all('table .checkerNode').setAttribute('class', 'checkerNode img-circle');

												var checker = node.one('.checkerNode');

												if (checker) {
													checker.setAttribute('class', 'checkerNode img-rounded btn-success');
												}
											}
										);
									}
								);
							}

							var setPalette = function(palleteRecived,palleteIDname) {
								var col1sel = A.one('#[@NAMESPACE@]navigation-color');
								var col1bsel = A.one('#[@NAMESPACE@]navigation-text-color');
								var col2sel = A.one('#[@NAMESPACE@]footer-color');
								var col2bsel = A.one('#[@NAMESPACE@]footer-text-color');

								var param = palleteRecived.split('/');
								var PaletteSelector = A.one("#[@NAMESPACE@]palette-selector");
								PaletteSelector.set('value', param[4]);

								col1sel.set('value', param[0]);
								col1sel.setStyle('borderLeftColor', param[0]);
								col1bsel.set('value', param[1]);
								col1bsel.setStyle('background', param[0]);
								col1bsel.setStyle('borderLeftColor', param[1]);
								col1bsel.setStyle('color', param[1]);

								col2sel.set('value', param[2]);
								col2sel.setStyle('borderLeftColor', param[2]);
								col2bsel.set('value', param[3]);
								col2bsel.setStyle('background', param[2]);
								col2bsel.setStyle('borderLeftColor', param[3]);
								col2bsel.setStyle('color', param[3]);
							}
						}
					);
				]]>
			</setting>

		</settings>
	</theme>
</look-and-feel>


